//----------------------
//This file was autogenerated by GrpcProxyGenerator.Service.GrpcProxyFactory
//Timestamp of generation: UTC 23-Nov-20 19:16:58
//----------------------

namespace MooMed.RemotingProxies.Proxies
{
	public class ProfilePictureServiceProxy : MooMed.RemotingProxies.ProxyInvocation.AbstractDeploymentProxy<MooMed.ServiceBase.Services.Interface.IProfilePictureService>, MooMed.ServiceBase.Services.Interface.IProfilePictureService
	{
		public ProfilePictureServiceProxy(MooMed.IPC.Grpc.Interface.IGrpcClientProvider clientProvider)
			: base(clientProvider,
				MooMed.Common.Definitions.IPC.DeploymentService.ProfilePictureService)
		{ }

		public System.Threading.Tasks.Task<MooMed.Core.DataTypes.ServiceResponse<System.Boolean>> ProcessUploadedProfilePicture(
			System.Collections.Generic.IAsyncEnumerable<System.Byte[]> pictureStream,
			ProtoBuf.Grpc.CallContext callContext)
			=> InvokeWithResult(service => service.ProcessUploadedProfilePicture(
				pictureStream,
				callContext));

		public System.Threading.Tasks.Task<MooMed.Core.DataTypes.ServiceResponse<System.String>> GetProfilePictureForAccountById(
			MooMed.Common.Definitions.IPC.Primitive<System.Int32> accountId)
			=> InvokeWithResult(service => service.GetProfilePictureForAccountById(
				accountId));

		public System.Threading.Tasks.Task<MooMed.Core.DataTypes.ServiceResponse<System.String>> GetProfilePictureForAccount(
			MooMed.Common.Definitions.Models.Session.Interface.ISessionContext sessionContext)
			=> InvokeWithResult(service => service.GetProfilePictureForAccount(
				sessionContext));

	}
}
