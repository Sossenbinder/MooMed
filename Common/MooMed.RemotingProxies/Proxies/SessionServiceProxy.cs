//----------------------
//This file was autogenerated by GrpcProxyGenerator.Service.GrpcProxyFactory
//Timestamp of generation: UTC 09-Dec-20 21:37:24
//----------------------

namespace MooMed.RemotingProxies.Proxies
{
	public class SessionServiceProxy : MooMed.RemotingProxies.ProxyInvocation.AbstractDeploymentProxy<MooMed.ServiceBase.Services.Interface.ISessionService>, MooMed.ServiceBase.Services.Interface.ISessionService
	{
		public SessionServiceProxy(MooMed.IPC.Grpc.Interface.IGrpcClientProvider clientProvider)
			: base(clientProvider,
				MooMed.Common.Definitions.IPC.DeploymentService.SessionService)
		{ }

		public System.Threading.Tasks.Task<MooMed.Core.DataTypes.ServiceResponse<MooMed.Common.Definitions.Models.Session.Interface.ISessionContext>> GetSessionContext(
			MooMed.Common.Definitions.IPC.Primitive<System.Int32> accountId)
			=> InvokeWithResult(service => service.GetSessionContext(
				accountId));

		public System.Threading.Tasks.Task<MooMed.Common.Definitions.Models.Session.Interface.ISessionContext> LoginAccount(
			MooMed.Common.Definitions.Models.User.Account account)
			=> InvokeWithResult(service => service.LoginAccount(
				account));

		public System.Threading.Tasks.Task UpdateSessionContext(
			MooMed.Common.Definitions.Models.Session.Interface.ISessionContext sessionContext)
			=> Invoke(service => service.UpdateSessionContext(
				sessionContext));

	}
}
