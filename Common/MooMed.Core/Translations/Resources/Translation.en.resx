<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountEmailValidationBody" xml:space="preserve">
    <value>Hello!
Thank you for registering your account to MooMed! Please click the following link to complete your registration:
http://{{0}}/AccountValidation?accountId={{1}}&amp;token={{2}}</value>
  </data>
  <data name="AccountEmailValidationSubject" xml:space="preserve">
    <value>Please validate your MooMed account</value>
  </data>
  <data name="AccountValidation" xml:space="preserve">
    <value>Account validation</value>
  </data>
  <data name="AccountValidationAlreadyValidated" xml:space="preserve">
    <value>Account was already validated.</value>
  </data>
  <data name="AccountValidationBody" xml:space="preserve">
    <value>Hello {{accountName}}, do you want to validate your account?</value>
  </data>
  <data name="AccountValidationInvalidGuid" xml:space="preserve">
    <value>Given validation key is not valid.</value>
  </data>
  <data name="GenericErrorMessage" xml:space="preserve">
    <value>An error occured.</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="AccountValidationEmailNotValidatedYet" xml:space="preserve">
    <value>Your email was not validated yet.</value>
  </data>
  <data name="AccountNotFound" xml:space="preserve">
    <value>Account not found.</value>
  </data>
  <data name="AccountLoginModelInvalid" xml:space="preserve">
    <value>Login information were not correct.</value>
  </data>
  <data name="AddAsFriend" xml:space="preserve">
    <value>Add as friend</value>
  </data>
  <data name="AlreadyFriendsWith" xml:space="preserve">
    <value>You're already friends with {0}</value>
  </data>
  <data name="Chat" xml:space="preserve">
    <value>Chat</value>
  </data>
  <data name="IdentityError_DefaultError" xml:space="preserve">
    <value>An error has occured.</value>
  </data>
  <data name="IdentityError_ConcurrencyFailure" xml:space="preserve">
    <value>A problem occured due to a concurrently occuring operation.</value>
  </data>
  <data name="IdentityError_PasswordMismatch" xml:space="preserve">
    <value>Incorrect password.</value>
  </data>
  <data name="IdentityError_LoginAlreadyAssociated" xml:space="preserve">
    <value>Login is already associated with another login.</value>
  </data>
  <data name="IdentityError_InvalidUserName" xml:space="preserve">
    <value>Invalid username.</value>
  </data>
  <data name="IdentityError_InvalidEmail" xml:space="preserve">
    <value>Invalid email.</value>
  </data>
  <data name="IdentityError_EmailMissing" xml:space="preserve">
    <value>Email missing.</value>
  </data>
  <data name="IdentityError_DuplicateUserName" xml:space="preserve">
    <value>Username already exists.</value>
  </data>
  <data name="IdentityError_DuplicateEmail" xml:space="preserve">
    <value>Email already exists.</value>
  </data>
  <data name="IdentityError_InvalidRoleName" xml:space="preserve">
    <value>Role name invalid.</value>
  </data>
  <data name="IdentityError_DuplicateRoleName" xml:space="preserve">
    <value>Duplicate role name.</value>
  </data>
  <data name="IdentityError_UserAlreadyHasPassword" xml:space="preserve">
    <value>User already has password.</value>
  </data>
  <data name="IdentityError_UserLockoutNotEnabled" xml:space="preserve">
    <value>Lockout is not enabled.</value>
  </data>
  <data name="IdentityError_UserAlreadyInRole" xml:space="preserve">
    <value>User is already assigned that role.</value>
  </data>
  <data name="IdentityError_UserNameNullOrEmpty" xml:space="preserve">
    <value>Invalid username.</value>
  </data>
  <data name="IdentityError_UserNotInRole" xml:space="preserve">
    <value>User is not in a role.</value>
  </data>
  <data name="IdentityError_PasswordTooShort" xml:space="preserve">
    <value>Password too short.</value>
  </data>
  <data name="IdentityError_PasswordRequiresNonAlphanumeric" xml:space="preserve">
    <value>Password requires non-alphanumeric characters.</value>
  </data>
  <data name="IdentityError_PasswordRequiresDigit" xml:space="preserve">
    <value>Password requires at least one digit.</value>
  </data>
  <data name="IdentityError_PasswordRequiresLower" xml:space="preserve">
    <value>Password requires lowercase character.</value>
  </data>
  <data name="IdentityError_PasswordRequiresUpper" xml:space="preserve">
    <value>Password requires uppercase character.</value>
  </data>
  <data name="IdentityError_PasswordMissing" xml:space="preserve">
    <value>Missing password.</value>
  </data>
  <data name="IdentityError_EmailNotConfirmed" xml:space="preserve">
    <value>Email not confirmed yet.</value>
  </data>
</root>